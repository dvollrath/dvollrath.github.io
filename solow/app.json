[{"name":"app.r","content":"library(shiny)\nlibrary(rsconnect)\nlibrary(ggplot2)\nlibrary(shinylive)\n\n#############################################################\n# Set the baseline parameters\n#############################################################\nbase_sI <- .2\nbase_gL <- .01\nbase_gA <- .02\nbase_delta <- .05\nbase_alpha <- .3\nbase_A <- 1\nbase_L <- 1\nbase_kalstar <- (base_sI/(base_gL+base_gA+base_delta))^(1/(1-base_alpha))\nbase_K <- base_kalstar*base_A\nbase_kystar <- base_sI/(base_gL+base_gA+base_delta)\nbase_timeT <- 50\n\n#############################################################\n# Define UI ----\n#############################################################\nui <- fluidPage(\n  withMathJax(),\n  titlePanel(\"Basic Solow Model\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      \n      h4(\"Set parameters\"),\n      actionButton(\"reset\", \"Reset to baseline\"),\n      sliderInput(\"alt_sI\", h6('New capital share of GDP \\\\(s_I\\\\)'),\n                  min = 0, max = 1, value = base_sI),\n      sliderInput(\"alt_gL\", h6(\"Population growth rate \\\\(gL\\\\)\"),\n                  min = -.04, max = .04, value = base_gL),\n      sliderInput(\"alt_gA\", h6(\"Productivity gorwth rate \\\\(gA\\\\)\"),\n                  min = -.06, max = .06, value = base_gA),\n      sliderInput(\"alt_delta\", h6(\"Depreciation rate \\\\(\\\\delta\\\\)\"),\n                  min = 0, max = 1, value = base_delta),\n      sliderInput(\"alt_alpha\", h6(\"Capital elasticity \\\\(\\\\alpha\\\\)\"),\n                  min = 0, max = 1, value = base_alpha),\n      sliderInput(\"alt_K\", h6(\"Initial capital stock \\\\(K_0\\\\)\"),\n                  min = 0, max = 10, value = base_K,step = 0.1),\n      sliderInput(\"alt_A\", h6(\"Initial Productivity \\\\(A_0\\\\)\"),\n                  min = 0, max = 10, value = base_A, step = 0.1),\n      sliderInput(\"alt_L\", h6(\"Initial Labor \\\\(L_0\\\\)\"),\n                  min = 0, max = 10, value = base_L, step = 0.1),\n      sliderInput(\"timeT\", h6(\"Number of periods\"),\n                  min = 0, max = 300, value = base_timeT, step = 1)\n      ), # end sidebar panel\n    \n    mainPanel(\n      \n      tabsetPanel(type = \"tabs\",\n                  tabPanel(\"K/AL ratio\",\n                           br(),\n                           p(\"The baseline is that the economy is on a BGP, so the actual K/AL ratio is constant. \n                             As you adjust the parameters to the left, there may be a new BGP, or actual K/AL may\n                             not be on the BGP any more. Black graphs the actual path of K/AL, blue the baseline BGP,\n                             and green is the new BGP based on your choice of parameters.\"),\n                           br(),\n                           p(\"Be sure you understand why some adjustments to parameters create a new BGP, and why\n                             some adjustments only push actual K/AL off of the BGP.\"),\n                           plotOutput(\"kalgraph\",width = \"100%\") ),\n                  tabPanel(\"Log GDP p.c.\", \n                           br(),\n                           p(\"This has the same idea the K/AL ratio. Black is the actual path of GDP per capita. \n                             Green is the BGP from the parameters you set, and blue is the original BGP.\"),\n                           br(),\n                           plotOutput(\"lnygraph\",width = \"100%\") ),\n                  tabPanel(\"Growth rate\", \n                           br(),\n                           p(\"The colors work the same with the growth rate of GDP per capita. Make sure you \n                             understand how this growth rate is related to the path of log GDP per capita.\"),\n                           br(),\n                           plotOutput(\"gygraph\",width = \"100%\") ),\n                  tabPanel(\"K/AL dynamics\", \n                           br(),\n                           p(\"This graph is different. It shows the relationship of the growth rate of K and\n                             the level of K/AL. The negative slope established the stability of the Solow model.\n                             Changes in some parameters shift the theoretical curves here, implying different\n                             steady state K/AL ratios (denoted by red dotted) where the growth rate of capital is equal to productivity and population growth.\"),\n                           br(),\n                           p(\"The black dots indicate the actual K/AL ratio and growth rate of capital over time. In the \n                             baseline, all these dots are at the steady state point. If you adjust parameters\n                             you'll see these spread out and show you how K/AL and the growth rate of K evolved. \n                             See how they follow the green path based on the new BGP.\"),\n                           br(),\n                           plotOutput(\"gkalgraph\",width = \"100%\") )\n      ) # end tabset\n\n      ) # end main panel\n  ) # end ui\n)\n#############################################################\n# Define server logic ----\n#############################################################\nserver <- function(input, output, session) {\n\n  # Reset parameters\n  observeEvent(input$reset, {\n    updateSliderInput(session,'alt_sI',value = base_sI)\n    updateSliderInput(session,'alt_gL',value = base_gL)\n    updateSliderInput(session,'alt_gA',value = base_gA)\n    updateSliderInput(session,'alt_delta',value = base_delta)\n    updateSliderInput(session,'alt_alpha',value = base_alpha)\n    updateSliderInput(session,'alt_K',value = base_K)\n    updateSliderInput(session,'alt_L',value = base_L)\n    updateSliderInput(session,'alt_A',value = base_A)\n    updateSliderInput(session,'timeT',value = base_timeT)\n  })\n  \n  # Simple function to calculate the new  steady state K/Y ratio for display\n  output$kystar <- renderText(\n    { \n    paste(\"K/AL*:\", \n          (input$alt_sI/(input$alt_delta+input$alt_gA+input$alt_gL))^(1/(1-base_alpha))\n    )\n    }\n  )\n  \n  # Function to combine alternative and baseline inputs, generate dataframe\n  # containing time series of outcomes\n  # This is all done in K/Y terms as that is how explicit solution is done\n  GraphData <- reactive({\n    t <- c(0:input$timeT) # vector of periods up to input time\n    df <- data.frame(t) # create dataframe to hold outcomes\n    alt_kystar <- input$alt_sI/(input$alt_delta+input$alt_gA+input$alt_gL) # alt ss KY\n    alt_ky <- (input$alt_K/(input$alt_L*input$alt_A))^(1-input$alt_alpha) ## actual starting KY\n    \n    # Formula to fill in per-period actual KY ratio\n    df$ky <- alt_kystar*(1-exp(-(1-input$alt_alpha)*(input$alt_delta+input$alt_gA+input$alt_gL)*df$t)) + alt_ky*exp(-(1-input$alt_alpha)*(input$alt_delta+input$alt_gA+input$alt_gL)*df$t)\n    df$kal <- df$ky^(1/(1-input$alt_alpha))\n    \n    df$kyalt <- alt_kystar # fill df with alt ss KY\n    df$kybase <- base_kystar # fill df with base ss KY\n    df$kalalt <- df$kyalt^(1/(1-input$alt_alpha)) # fill df with alt ss KAL\n    df$kalbase <- base_kalstar # fill df with base ss KAL\n\n    # Fill df with series on log GDP per capita\n    df$lny <- (input$alt_alpha/(1-input$alt_alpha))*df$ky + log(input$alt_A) + input$alt_gA*df$t\n    df$lnyalt <- (input$alt_alpha/(1-input$alt_alpha))*df$kyalt + log(input$alt_A) + input$alt_gA*df$t\n    df$lnybase <- (base_alpha/(1-base_alpha))*df$kybase + log(base_A) + base_gA*df$t\n    df$lnymax <- max(df$lny)\n    \n    # Fill df with series on growth rate of GDP per capita\n    df$gky <- (1-input$alt_alpha)*(input$alt_sI/df$ky-input$alt_gL -input$alt_gA- input$alt_delta)\n    df$gk  <- input$alt_sI/df$ky- input$alt_delta\n    df$gy <- (input$alt_alpha/(1-input$alt_alpha))*df$gky + input$alt_gA\n    df$gyalt <- input$alt_gA\n    df$gybase <- base_gA\n      \n    df$tick <- df$kal # for graphing purposes later\n    return(df)\n  })\n  \n  output$kalgraph <- renderPlot(\n    {\n      ggplot(GraphData(), aes(t,value,colour=variable)) +\n        geom_line(aes(y = kal, color = \"black\"),size=2) + \n        geom_line(aes(y = kalbase, color=\"blue\"), linetype=\"dashed\",size=2) +\n        geom_line(aes(y = kalalt, color=\"green\"), linetype=\"dashed\",size=2) +\n        xlab(\"Time\") +\n        ylab(\"K/AL ratio\") +\n        ylim(0, 10) +\n        theme_light() +\n        theme(text = element_text(size = 16)) +\n        ggtitle(\"K/AL ratio over time\") + \n        scale_color_identity(name = \"Models\",\n                             breaks = c(\"black\", \"green\", \"blue\"),\n                             labels = c(\"Actual\", \"New BGP\", \"Old BGP\"),\n                             guide = \"legend\")\n    }\n  ) # end ky graph\n  \n  output$lnygraph <- renderPlot(\n    {\n      ggplot(GraphData(), aes(t,value,colour=variable)) +\n        geom_line(aes(y = lny, color = \"black\"),size=2) + \n        geom_line(aes(y = lnybase, color=\"blue\"), linetype=\"dashed\",size=2) +\n        geom_line(aes(y = lnyalt, color=\"green\"), linetype=\"dashed\",size=2) +\n        xlab(\"Time\") +\n        ylab(\"Log GDP per capita\") +\n        #ylim(0, 3) + # Don't use limits here, let graph adjust to size\n        theme_light() +\n        theme(text = element_text(size = 16)) +\n        ggtitle(\"GDP per capita over time\") + \n        scale_color_identity(name = \"Models\",\n                             breaks = c(\"black\", \"green\", \"blue\"),\n                             labels = c(\"Actual\", \"New BGP\", \"Old BGP\"),\n                             guide = \"legend\")\n    }\n  ) # end lny graph\n  \n  \n  output$gygraph <- renderPlot(\n    {\n      ggplot(GraphData(), aes(t,value,colour=variable)) +\n        geom_line(aes(y = gy, color = \"black\"),size=2) + \n        geom_line(aes(y = gybase, color=\"blue\"), linetype=\"dashed\",size=2) +\n        geom_line(aes(y = gyalt, color=\"green\"), linetype=\"dashed\",size=2) +\n        xlab(\"Time\") +\n        ylab(\"Growth rate of GDP p.c.\") +\n        theme_light() +\n        theme(text = element_text(size = 16)) +\n        ylim(-.05, .07) +\n        ggtitle(\"Growth rate of GDP p.c. over time\") + \n        scale_color_identity(name = \"Models\",\n                             breaks = c(\"black\", \"green\", \"blue\"),\n                             labels = c(\"Actual\", \"New BGP\", \"Old BGP\"),\n                             guide = \"legend\")\n    }\n  ) # end gy graph\n\n  output$gkalgraph <- renderPlot(\n    {\n      tick <- seq(0,6,.1) # arbitrary kal values\n      df <- data.frame(tick) # create dataframe\n      df$gk <- input$alt_sI/(df$tick^(1-input$alt_alpha))- input$alt_delta\n      df$gkbase <- base_sI/(df$tick^(1-input$alt_alpha))- base_delta\n      alt_kalstar = (input$alt_sI/(input$alt_gL + input$alt_gA + input$alt_delta))^(1/(1-input$alt_alpha))\n      \n      ggplot(df, aes(x=tick)) +\n        geom_line(aes(y = gk, color = \"green\"),size=2) + \n        geom_line(aes(y = gkbase, color=\"blue\"), linetype=\"dashed\",size=2) +\n        geom_point(data=GraphData(),y=GraphData()$gk, color=\"black\") +\n        geom_hline(yintercept=base_gA+base_gL, linetype=\"dotted\", color = \"blue\",size=2) +\n        geom_hline(yintercept=input$alt_gA+input$alt_gL, linetype=\"dotted\", color = \"green\",size=2) +\n        geom_vline(xintercept=base_kalstar, linetype=\"dotted\", color = \"red\") +\n        geom_vline(xintercept=alt_kalstar, linetype=\"dotted\", color = \"red\") +\n        xlab(\"K/AL ratio\") +\n        ylab(\"Growth rates\") +\n        theme_light() +\n        theme(text = element_text(size = 16)) +\n        ylim(-.01,.12) +\n        ggtitle(\"Growth rate of K vs. K/AL\") + \n        scale_color_identity(name = \"Models\",\n                             breaks = c(\"green\", \"blue\"),\n                             labels = c(\"New BGP\", \"Old BGP\"),\n                             guide = \"legend\")\n    }\n  ) # end gky graph\n  \n  \n} # end server\n\n# Run the app ----\nsetwd(\"~/dropbox/project/studyguide/code/\")\nshinylive::export(appdir = \"./SolowBasic\", destdir = \"docs\")\nshinyApp(ui = ui, server = server)","type":"text"}]
